import type { NextPage } from "next";
import Head from "next/head";
import { useRouter } from "next/router";
import { useEffect, useState } from "react";
import styles from "../styles/Home.module.css";

interface Error {
  message: string;
  type: string;
}

interface Grade {
  name: string;
  grade: number;
}

const Home: NextPage = () => {
  const router = useRouter();
  const [inputData, setInputData] = useState<string>("");
  const [token, setToken] = useState<string>("");
  const [username, setUsername] = useState<string>("");
  const [sort, setSort] = useState<string>("highestFirst");

  const [errorMessage, setErrorMessage] = useState<Error | null>();
  const [grades, setGrades] = useState<Grade[] | null>();

  useEffect(() => {
    const CANVAS_TOKEN = localStorage.getItem("CANVAS_TOKEN");
    if (CANVAS_TOKEN) {
      setToken(CANVAS_TOKEN);

      const getCourseInfo = async () => {
        const response = await fetch("/api/grades", {
          method: "POST",
          body: CANVAS_TOKEN,
        });

        const data = await response.json();

        if (data.type === "error") {
          setErrorMessage(data);
        } else {
          setGrades(data.grades);
          setUsername(data.username);
        }
      };

      getCourseInfo();
    } else {
      setToken("");
    }
  }, [token]);

  const saveToken = (token: string) => {
    localStorage.setItem("CANVAS_TOKEN", token);
    router.reload();
  };

  const removeToken = () => {
    localStorage.removeItem("CANVAS_TOKEN");
    router.reload();
  };

  const submit = async () => {
    const response = await fetch("/api/verify", {
      method: "POST",
      body: inputData,
    });

    const data = await response.json();
    setErrorMessage(data);

    if (inputData && data.type === "success") {
      saveToken(inputData);
      setToken(inputData);
    }
  };

  return (
    <div className={styles.container}>
      <Head>
        <title>Your VLC Grades</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>Your VLC Grades</h1>

        <p className={styles.description}>
          An app by{" "}
          <a rel="noreferrer" target="_blank" href="https://eesa.zahed.ca">
            Eesa Zahed
          </a>
        </p>

        <div className={styles.main}>
          {token ? (
            <div className={styles.home}>
              {grades && (
                <div className={styles.grades}>
                  <h1>Hello{username ? `, ${username}` : ""}</h1>
                  <h2>Your grades:</h2>

                  {sort && (
                    <div id="list">
                      {sort === "highestFirst"
                        ? grades
                            .sort((a, b) => b.grade - a.grade)
                            .map((grade, index) => {
                              return (
                                <p key={index}>
                                  {grade.name}: {grade.grade}%
                                </p>
                              );
                            })
                        : grades
                            .sort((a, b) => a.grade - b.grade)
                            .map((grade, index) => {
                              return (
                                <p key={index}>
                                  {grade.name}: {grade.grade}%
                                </p>
                              );
                            })}
                    </div>
                  )}

                  <hr />
                  <p>
                    Total Average &asymp;{" "}
                    {(
                      grades.reduce((total, next) => total + next.grade, 0) /
                      grades.length
                    ).toFixed(2)}
                    %
                  </p>
                  <p>
                    Sort:{" "}
                    <select
                      value={sort}
                      className={styles.select}
                      onChange={(e) => setSort(e.target.value)}
                    >
                      <option value="highestFirst">High to low</option>{" "}
                      <option value="lowestFirst">Low to high</option>
                    </select>
                  </p>
                </div>
              )}

              <p
                style={{
                  color: errorMessage?.type === "error" ? "red" : "green",
                }}
              >
                {errorMessage?.message}
              </p>
              <button className={styles.button} onClick={removeToken}>
                Clear Token
              </button>
            </div>
          ) : (
            <div className={styles.form}>
              <label htmlFor="token">
                Enter your canvas token (more information on how to get your
                Canvas token{" "}
                <a
                  rel="noreferrer"
                  target="_blank"
                  href="https://canvas.instructure.com/doc/api/file.oauth.html#manual-token-generation"
                >
                  here
                </a>
                )
              </label>
              <p
                style={{
                  color: errorMessage?.type === "error" ? "red" : "green",
                }}
              >
                {errorMessage?.message}
              </p>
              <input
                className={styles.input}
                type="text"
                name="token"
                id="token"
                value={inputData}
                onChange={(e) => setInputData(e.target.value)}
                placeholder="Your canvas token"
              />
              <button className={styles.button} onClick={submit}>
                Submit
              </button>
            </div>
          )}
          <p className={styles.footer}>
            This app does not record any of your personal information.
            <br />
            The code is available on{" "}
            <a
              rel="noreferrer"
              target="_blank"
              href="https://github.com/eesazahed/vlc-grades"
            >
              GitHub
            </a>
            .
          </p>
        </div>
      </main>
    </div>
  );
};

export default Home;
